#It is necessary to load Bioconductor packages and install "limma" and "EnhancedVolcano" packages. EnhancedVolcano work for sure with last version of R.

if (!requireNamespace("BiocManager", quietly = TRUE))
    install.packages("BiocManager")

BiocManager::install("limma")
BiocManager::install("EnhancedVolcano")

#Load libraries
library(limma)
library(EnhancedVolcano)

#Load "normalized_data_matrix" and the "design_matrix".
#normalized_data_matrix: each column represents a sample (this is a unique file derived from the fusion of samples inside the two groups), and each row represents a detected gene.
#design matrix: in our case each column represents a group (i.e. group1, group2), and each row corresponds to a sample in the normalized_data_matrix.

#HERE EXAMPLE OF COMPARISON AMONG DKD AND NORMAL GLOMERULI

matrix_data <- read.delim("matrix_DKD_normal.txt", header = TRUE, sep = "\t", quote = "\"", dec = ".", row.names = 1)
matrix_design <- read.delim("matrix_design_final.txt", header = TRUE, sep = "\t", quote = "\"", dec = ".", row.names = 1)

#Create a Contrast matrix: Then, we must tell limma whom we are going to compare with whom.
cont_matrix <- makeContrasts(normalvsDKD = normal-DKD, levels = matrix_design)   #levels means samples

#Fit the expression matrix to a linear model
fit <- lmFit(matrix_data, matrix_design)

#Compute contrast
fit_contrast <- contrasts.fit(fit, cont_matrix)

#Bayes statistics of differential expression
fit_contrast1 <- eBayes(fit_contrast)

#Generate a list of top 'n' differentially expressed genes. The user may choose this 'n' number (If n > of DE_genes --> n = all_DE_genes)
DE_table1 <- topTable(fit_contrast1, adjust="fdr", n=500)

#print the table. Here the user could save this table.
DE_table1

#To prepare heatmap, you select rows/genes of "DE_table1" from "matrix_data".
table1 <- matrix_data[row.names(DE_table1),]
map1 <- data.matrix(table1)

svg("Heatmap.svg",width=15,height=30)		#to open in high resolution the plot, the problem is that 'width' and 'height' change on the basis of how much is big the plot!
heatmap(map1, col = rev(heat.colors(75)), margins=c(12,15), cexRow = 0.1, cexCol = 0.3)		#same problem for character dimension of genes (cexRow) and samples (cexCol) in the plot
dev.off()


svg("VolcanoPlot.svg",width=15,height=8)    		#to open in high resolution the plot, the problem is that 'width' and 'height' change on the basis of how much is big the plot!
EnhancedVolcano(fit_contrast1, lab = rownames(fit_contrast1), x = "coefficients", y = "p.value", title = 'Normal-vs-DKD Glomeruli', pCutoff = 10e-10, FCcutoff = 20, pointSize = 1.0, labSize = 3.0) #also these sizes ay changes...
#The user may choose 'pCutoff' and 'FCcutoff' 

dev.off()



